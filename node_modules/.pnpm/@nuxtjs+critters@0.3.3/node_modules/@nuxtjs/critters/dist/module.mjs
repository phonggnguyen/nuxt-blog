import { defineNuxtModule, isNuxt2 } from '@nuxt/kit';
import { resolve } from 'pathe';
import Critters from 'critters';

const module = defineNuxtModule({
  meta: {
    name: "critters",
    configKey: "critters"
  },
  defaults: {
    config: {
      preload: "media"
    }
  },
  setup(options, nuxt) {
    if (nuxt.options.dev)
      return;
    nuxt.options.build.extractCSS = true;
    nuxt.hook("nitro:init", (nitro) => {
      const critters = new Critters({
        path: nitro.options.output.publicDir,
        publicPath: nitro.options.baseURL,
        ...options.config
      });
      nitro.hooks.hook("prerender:generate", async (route) => {
        if (!route.fileName?.endsWith(".html") || !route.contents)
          return;
        route.contents = await critters.process(route.contents);
      });
    });
    if (isNuxt2()) {
      const critters = new Critters({
        path: resolve(nuxt.options.buildDir, "dist/client"),
        publicPath: nuxt.options.build.publicPath,
        ...options.config
      });
      nuxt.hook("render:route", async (_url, result) => {
        result.html = await critters.process(result.html);
      });
      nuxt.hook("generate:page", async (result) => {
        result.html = await critters.process(result.html);
      });
    }
  }
});

export { module as default };
