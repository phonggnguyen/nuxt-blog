{"version":3,"file":"ContentNavigation.c52a1fd2.js","sources":["../../../../node_modules/.pnpm/@nuxt+content@2.0.1/node_modules/@nuxt/content/dist/runtime/composables/navigation.mjs","../../../../node_modules/.pnpm/@nuxt+content@2.0.1/node_modules/@nuxt/content/dist/runtime/components/ContentNavigation.mjs"],"sourcesContent":["import { hash } from \"ohash\";\nimport { useHead, useCookie } from \"#app\";\nimport { jsonStringify } from \"../utils/json.mjs\";\nimport { withContentBase } from \"./utils.mjs\";\nexport const fetchContentNavigation = (queryBuilder) => {\n  const params = queryBuilder?.params();\n  const apiPath = withContentBase(params ? `/navigation/${hash(params)}` : \"/navigation\");\n  if (!process.dev && process.server) {\n    useHead({\n      link: [\n        { rel: \"prefetch\", href: apiPath }\n      ]\n    });\n  }\n  return $fetch(apiPath, {\n    method: \"GET\",\n    responseType: \"json\",\n    params: {\n      _params: jsonStringify(params || {}),\n      previewToken: useCookie(\"previewToken\").value\n    }\n  });\n};\n","import { toRefs, defineComponent, h, useSlots } from \"vue\";\nimport { hash } from \"ohash\";\nimport { useAsyncData, fetchContentNavigation } from \"#imports\";\nexport default defineComponent({\n  props: {\n    query: {\n      type: Object,\n      required: false,\n      default: void 0\n    }\n  },\n  async setup(props) {\n    const {\n      query\n    } = toRefs(props);\n    const { data, refresh } = await useAsyncData(`content-navigation-${hash(query.value)}`, () => fetchContentNavigation(query.value));\n    return {\n      data,\n      refresh\n    };\n  },\n  render(ctx) {\n    const slots = useSlots();\n    const {\n      query,\n      data,\n      refresh\n    } = ctx;\n    const emptyNode = (slot, data2) => h(\"pre\", null, JSON.stringify({ message: \"You should use slots with <ContentNavigation>\", slot, data: data2 }, null, 2));\n    if (slots?.empty && (!data || !data?.length)) {\n      return slots?.empty?.({ query, ...this.$attrs }) || emptyNode(\"empty\", { query, data });\n    }\n    return slots?.default ? slots.default({ navigation: data, refresh, ...this.$attrs }) : emptyNode(\"default\", data);\n  }\n});\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAIO,MAAM,yBAAyB,CAAC,iBAAiB;AACtD,QAAM,SAAS,6CAAc;AAC7B,QAAM,UAAU,gBAAgB,SAAS,eAAe,KAAK,MAAM,MAAM,aAAa;AAClD;AAClC,YAAQ;AAAA,MACN,MAAM;AAAA,QACJ,EAAE,KAAK,YAAY,MAAM,QAAS;AAAA,MACnC;AAAA,IACP,CAAK;AAAA,EACF;AACD,SAAO,OAAO,SAAS;AAAA,IACrB,QAAQ;AAAA,IACR,cAAc;AAAA,IACd,QAAQ;AAAA,MACN,SAAS,cAAc,UAAU,EAAE;AAAA,MACnC,cAAc,UAAU,cAAc,EAAE;AAAA,IACzC;AAAA,EACL,CAAG;AACH;ACnBA,MAAA,oBAAA,gBAAA;AAAA,EACA,OAAA;AAAA,IACA,OAAA;AAAA,MACA,MAAA;AAAA,MACA,UAAA;AAAA,MACA,SAAA;AAAA,IACA;AAAA,EACA;AAAA,EACA,MAAA,MAAA,OAAA;AACA,UAAA;AAAA,MACA;AAAA,IACA,IAAA,OAAA,KAAA;AACA,UAAA,EAAA,MAAA,QAAA,IAAA,MAAA,aAAA,sBAAA,KAAA,MAAA,KAAA,KAAA,MAAA,uBAAA,MAAA,KAAA,CAAA;AACA,WAAA;AAAA,MACA;AAAA,MACA;AAAA,IACA;AAAA,EACA;AAAA,EACA,OAAA,KAAA;;AACA,UAAA,QAAA;AACA,UAAA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACA,IAAA;AACA,UAAA,YAAA,CAAA,MAAA,UAAA,EAAA,OAAA,MAAA,KAAA,UAAA,EAAA,SAAA,iDAAA,MAAA,MAAA,MAAA,GAAA,MAAA,CAAA,CAAA;AACA,SAAA,+BAAA,WAAA,CAAA,QAAA,EAAA,6BAAA,UAAA;AACA,eAAA,oCAAA,UAAA,+BAAA,EAAA,OAAA,GAAA,KAAA,cAAA,UAAA,SAAA,EAAA,OAAA,KAAA,CAAA;AAAA,IACA;AACA,YAAA,+BAAA,WAAA,MAAA,QAAA,EAAA,YAAA,MAAA,SAAA,GAAA,KAAA,OAAA,CAAA,IAAA,UAAA,WAAA,IAAA;AAAA,EACA;AACA,CAAA;"}