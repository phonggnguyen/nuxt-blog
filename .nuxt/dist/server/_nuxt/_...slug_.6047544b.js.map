{"version":3,"file":"_...slug_.6047544b.js","sources":["../../../../pages/[...slug].vue"],"sourcesContent":["<script setup lang=\"ts\">\nimport { callWithNuxt, throwError, useNuxtApp } from '#app'\nimport { createError } from 'h3'\nimport { useContentHead } from '~/composables/content'\n\nconst routesContentQuery = await useRoutesContent()\n\nconst { data: pageContent, error } = routesContentQuery\n// presume any error is a 404, this should pickup any rendering issues\nif (error.value) {\n  const nuxtApp = useNuxtApp()\n  callWithNuxt(nuxtApp, throwError, [createError({\n    statusCode: 404,\n    statusMessage: `Page not found: ${useRoute().path}`,\n  })])\n\n  if (process.server && nuxtApp.ssrContext)\n    nuxtApp.ssrContext.res.statusCode = 404\n}\nelse {\n  useContentHead(pageContent)\n}\n</script>\n\n<template>\n  <div>\n    <LazyPageRenderer v-if=\"pageContent?.renderer === 'page'\" :page=\"pageContent\" />\n    <LazyPostRenderer v-else-if=\"pageContent?.renderer === 'post'\" :post=\"pageContent\" />\n  <!-- @todo handle error -->\n  </div>\n</template>\n"],"names":["_withAsyncContext"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAKA,UAAA,sBAAA,CAAA,QAAA,SAAA,IAAAA,iBAAA,MAAA,kBAAA,GAAA,SAAA,MAAA,QAAA,UAAA,GAAA;AAEA,UAAA,EAAA,MAAA,aAAA,MAAA,IAAA;AAEA,QAAA,MAAA,OAAA;AACE,YAAA,UAAA;AACA,mBAAA,SAAA,YAAA,CAAA,YAAA;AAAA,QAA+C,YAAA;AAAA,QACjC,eAAA,mBAAA,SAAA,EAAA;AAAA,MACiC,CAAA,CAAA,CAAA;AAG/C,UAAA,QAAA;AACE,gBAAA,WAAA,IAAA,aAAA;AAAA,IAAoC,OAAA;AAGtC,qBAAA,WAAA;AAAA,IAA0B;;;;;;;;;;;;;;;;;;;;;;;"}